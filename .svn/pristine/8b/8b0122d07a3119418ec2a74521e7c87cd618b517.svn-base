//
//  DNWBottomLabelView.m
//  DouNiWan
//
//  Created by HMT@WDQ on 14-5-10.
//  Copyright (c) 2014年 胡明涛. All rights reserved.
//

#import "DNWBottomLabelView.h"

@implementation DNWBottomLabelView

- (void)dealloc{

    RELEASE_SAFELY(_clearButton);
    [super dealloc];

}

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        [self createBottomLabelView];
        
    }
    return self;
}

- (void)createBottomLabelView{

    _labelImageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 40, 40)];
    _labelImageView.backgroundColor = [UIColor blueColor];
    _labelImageView.userInteractionEnabled = YES;
    [self addSubview:_labelImageView];
    [_labelImageView release];
    
    _numberLabel = [[UILabel alloc] initWithFrame:CGRectMake(40, 0, 40, 40)];
    _numberLabel.userInteractionEnabled = YES;
    _numberLabel.textAlignment = NSTextAlignmentCenter;
    _numberLabel.font = [UIFont systemFontOfSize:15.0];
    [self addSubview:_numberLabel];
    [_numberLabel release];

    //  设计为透明的,只为增加响应方法
    self.clearButton = [UIButton buttonWithType:UIButtonTypeSystem];
    _clearButton.backgroundColor = [UIColor clearColor];
    _clearButton.frame = CGRectMake(0, 0, 80, 40);
    [_clearButton addTarget:self action:@selector(didClickClearButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    [self addSubview:_clearButton];
    
}

#pragma mark - 点击按钮
- (void)didClickClearButtonAction:(UIButton *)button{

    //  构造分享内容
    id<ISSContent> publishContent = [ShareSDK content:@"赵伟松爱上了波多野"
                                       defaultContent:@"这个人比较懒,目前什么都木有写"
                                                image:nil
                                                title:@"逗乐玩"
                                                  url:@"https://api.weibo.com/oauth2/default.html"
                                          description:@"真是太搞笑了"
                                            mediaType:SSPublishContentMediaTypeImage];
    
    [ShareSDK showShareActionSheet:nil
                         shareList:nil
                           content:publishContent
                     statusBarTips:YES
                       authOptions:nil
                      shareOptions: nil
                            result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
                                if (state == SSResponseStateSuccess)
                                {
                                    NSLog(@"分享成功");
                                }
                                else if (state == SSResponseStateFail)
                                {
                                    NSLog(@"分享失败,错误码:%d,错误描述:%@", [error errorCode], [error errorDescription]);
                                }
                            }];
    /**
     *	@brief	一键分享内容
     *
     *	@param 	content 	内容对象
     *	@param 	shareList 	平台类型列表（邮件、短信、微信、QQ、打印、拷贝除外） 平台类型是一个枚举------->ShareType
     *	@param 	authOptions 	授权选项，用于指定接口在需要授权时的一些属性（如：是否自动授权，授权视图样式等）,设置未nil则表示采用默认选项
     *  @param  statusBarTips   状态栏提示
     *	@param 	result 	返回事件
     */
/*
    [ShareSDK oneKeyShareContent:publishContent shareList:@[[NSString stringWithFormat:@"%i",ShareTypeSinaWeibo]] authOptions:nil shareOptions:nil statusBarTips:YES result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
        if (state == SSResponseStateSuccess)
        {
            NSLog(@"分享成功");
        }
        else if (state == SSResponseStateFail)
        {
            NSLog(@"分享失败,错误码:%d,错误描述:%@", [error errorCode], [error errorDescription]);
        }
    }];*/

}

@end
