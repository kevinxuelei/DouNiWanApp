//
//  DNWFirstPapersViewController.m
//  DouNiWan
//
//  Created by HMT@WDQ on 14-5-10.
//  Copyright (c) 2014年 胡明涛. All rights reserved.
//

//  火热段子接口
#define EssencePaperURL  @"http://api.budejie.com/api/api_open.php?c=data&a=list&from=ios&per=20&page=0&type=29&client=iphone&market=&ver=2.6&device=iPhone%205&uid=&sex=&udid=&mac=02:00:00:00:00:00&openudid=131ee15d28c0deb092739505d94cc1afc601eec8&asid=67E2FAF1-18A3-423E-9BF8-4248922D30BA&jbk=0&appname=baisibudejie"
#define FrontEssencePaperString @"http://api.budejie.com/api/api_open.php?c=data&a=list&from=ios&per=20&page="
#define BackEssencePaperString  @"&type=29&client=iphone&market=&ver=2.6&device=iPhone%205&uid=&sex=&udid=&mac=02:00:00:00:00:00&openudid=131ee15d28c0deb092739505d94cc1afc601eec8&asid=67E2FAF1-18A3-423E-9BF8-4248922D30BA&jbk=0&appname=baisibudejie"

//  最新段子接口
#define BestNewPaperURL  @"http://api.budejie.com/api/api_open.php?c=data&a=newlist&from=ios&per=20&page=0&type=29&client=iphone&market=&ver=2.6&device=iPhone%205&uid=&sex=&udid=&mac=02:00:00:00:00:00&openudid=131ee15d28c0deb092739505d94cc1afc601eec8&asid=67E2FAF1-18A3-423E-9BF8-4248922D30BA&jbk=0&appname=baisibudejie"
#define FrontBestNewPaperString @"http://api.budejie.com/api/api_open.php?c=data&a=newlist&from=ios&per=20&page="
#define BackBestNewPaperString  @"&type=29&client=iphone&market=&ver=2.6&device=iPhone%205&uid=&sex=&udid=&mac=02:00:00:00:00:00&openudid=131ee15d28c0deb092739505d94cc1afc601eec8&asid=67E2FAF1-18A3-423E-9BF8-4248922D30BA&jbk=0&appname=baisibudejie"

//  穿越段子接口
#define ArcrandomPaperURL  @"http://api.budejie.com/api/api_open.php?c=data&a=list&from=ios&per=20&page=0&type=29&order=timewarp&client=iphone&market=&ver=2.6&device=iPhone%205&uid=&sex=&udid=&mac=02:00:00:00:00:00&openudid=131ee15d28c0deb092739505d94cc1afc601eec8&asid=67E2FAF1-18A3-423E-9BF8-4248922D30BA&jbk=0&appname=baisibudejie"
#define FrontArcrandomPaperString @"http://api.budejie.com/api/api_open.php?c=data&a=list&from=ios&per=20&page="
#define BackArcandomPaperString   @"&type=29&order=timewarp&client=iphone&market=&ver=2.6&device=iPhone%205&uid=&sex=&udid=&mac=02:00:00:00:00:00&openudid=131ee15d28c0deb092739505d94cc1afc601eec8&asid=67E2FAF1-18A3-423E-9BF8-4248922D30BA&jbk=0&appname=baisibudejie"


#import "DNWFirstPaperViewController.h"
#import "DNWCustomWeatherView.h"
#import "DNWFirstPagesTableView.h"
#import "DNWAllDataHandle.h"
#import "DNWCommitViewController.h"
#import "DNWWeatherData.h"
#import "UIImageView+WebCache.h"

@interface DNWFirstPaperViewController (){

    UISegmentedControl * _segmentView;
    DNWCustomWeatherView * _weatherView;
    DNWFirstPagesTableView * _essenceTableView;
    DNWFirstPagesTableView * _bestNewTableView;
    DNWFirstPagesTableView * _arcrandomTableView;
    UIScrollView * _rootScrollView;
    DNWWeatherData * _weatherData;
    NSTimer * _timer;

}

@end

@implementation DNWFirstPaperViewController

- (void)dealloc{

    RELEASE_SAFELY(_weatherData);
    [super dealloc];

}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewWillAppear:(BOOL)animated{

    [super viewWillAppear:animated];
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self createRootScrollView];
    
    [self createWeatherView];
    
    [self createSegmentedControlView];
    
    
#pragma mark - 左侧按钮
    self.navigationItem.leftBarButtonItem = [[[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(didClickLeftBarButtonAction:)] autorelease];
    
    [_segmentView release];
    
#pragma mark - 默认是火热tableView(仔细观察发现,在viewDidLoad里面创建和在外部创建,所起的Y坐标是不一样的)
    [self createEssenceTableView];
    
}

#pragma mark - segmentedControl分页控制器
- (void)createSegmentedControlView{

    NSArray * segmentArray = @[@"火热",@"最新",@"穿越"];
    _segmentView = [[UISegmentedControl alloc] initWithItems:segmentArray];
    _segmentView.frame = CGRectMake(100, 24, 120, 36);
    _segmentView.momentary = NO;
    _segmentView.selectedSegmentIndex = 0;
    _segmentView.tintColor = [UIColor redColor];
    [_segmentView addTarget:self action:@selector(didClickSegmentView:) forControlEvents:UIControlEventValueChanged];
    self.navigationItem.titleView = _segmentView;

}

#pragma mark - 创建并显示天气状况labelView
- (void)createWeatherView{

    _weatherView = [[DNWCustomWeatherView alloc] initWithFrame:CGRectMake(240, 0, 80, 44)];
    self.navigationItem.rightBarButtonItem = [[[UIBarButtonItem alloc] initWithCustomView:_weatherView]autorelease];
    
    _weatherData = [[DNWWeatherData alloc] init];
    [_weatherData setPassWeatherData:^(DNWWeatherData * weatherData){
        
        // 显示数据到View上
        _weatherView.temperatureLabel.text = [[weatherData.temperatureLow stringByAppendingString:@"℃~"] stringByAppendingString:[weatherData.temperatureHeight stringByAppendingString:@"℃"]];
        _weatherView.loactionNameLabel.text = weatherData.cityName;
        [_weatherView.weatherImage1 setImageWithURL:weatherData.stateImageUrl1 placeholderImage:nil];
        [_weatherView.weatherImage2 setImageWithURL:weatherData.stateImageUrl2 placeholderImage:nil];
        
        // 加入渐隐渐入的效果
        [UIView animateWithDuration:5.0 animations:^{

            _weatherView.temperatureLabel.alpha = 1.0;
            _weatherView.loactionNameLabel.alpha = 1.0;
            _weatherView.weatherImage1.alpha = 1.0;
            
        } completion:^(BOOL finished) {
            
            // 设置一个定时器,灵活的变换天气效果
            _timer = [NSTimer scheduledTimerWithTimeInterval:20 target:self selector:@selector(goTime) userInfo:nil repeats:YES];
            [_timer fire];

        }];
    }];
    
    [_weatherView release];

}

#pragma mark 定时器响应方法
- (void)goTime{
    
    [UIView animateWithDuration:3 animations:^{
        
        if (_weatherView.weatherImage1.alpha == 1.0) {
            
                _weatherView.weatherImage2.alpha = 1.0;
                _weatherView.weatherImage1.alpha = 0.0;
            
        }else{
        
            _weatherView.weatherImage1.alpha = 1.0;
            _weatherView.weatherImage2.alpha = 0.0;
        
        }
    } completion:nil];

}

#pragma mark - 创建滚动效果视图
- (void)createRootScrollView{

    _rootScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, ScreenHeight)];
    _rootScrollView.showsHorizontalScrollIndicator = NO;
    _rootScrollView.contentSize = CGSizeMake(ScreenWidth * 3, 0);
    _rootScrollView.pagingEnabled = YES;
    _rootScrollView.bounces = NO;
    _rootScrollView.delegate = self;
    
    [self.view addSubview:_rootScrollView];
    [_rootScrollView release];

}

#pragma mark - 创建精华tableView
- (void)createEssenceTableView{

    _essenceTableView = [[DNWFirstPagesTableView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, ScreenHeight) style:UITableViewStylePlain urlString:EssencePaperURL];
    _essenceTableView.frontString = FrontEssencePaperString;
    _essenceTableView.backString  = BackEssencePaperString;
    [_rootScrollView addSubview:_essenceTableView];
    [_essenceTableView release];
    
    // 防止循环引用,预防内存泄露
    __block DNWFirstPaperViewController * otherSelf = self;
    [_essenceTableView setPushCommitView:^(NSString * url){
    
        DNWCommitViewController * commitVC = [[DNWCommitViewController alloc] init];
        commitVC.modalPresentationStyle = UIModalPresentationFullScreen;
        commitVC.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        commitVC.getCommitUrl = url;
        UINavigationController * commitNC = [[UINavigationController alloc] initWithRootViewController:commitVC];
        [otherSelf presentViewController:commitNC animated:YES completion:nil];
        [commitVC release];
        [commitNC release];
    
    }];

}

#pragma mark - 创建最新tableView
- (void)createBestNewTableView{
    
    _bestNewTableView = [[DNWFirstPagesTableView alloc] initWithFrame:CGRectMake(320, 0, ScreenWidth, ScreenHeight) style:UITableViewStylePlain urlString:BestNewPaperURL];
    _bestNewTableView.frontString = FrontBestNewPaperString;
    _bestNewTableView.backString  = BackBestNewPaperString;
    [_rootScrollView addSubview:_bestNewTableView];
    [_bestNewTableView release];

    // 防止循环引用,预防内存泄露
    __block DNWFirstPaperViewController * otherSelf = self;
    [_bestNewTableView setPushCommitView:^(NSString * url){
        
        DNWCommitViewController * commitVC = [[DNWCommitViewController alloc] init];
        commitVC.modalPresentationStyle = UIModalPresentationFullScreen;
        commitVC.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        commitVC.getCommitUrl = url;
        UINavigationController * commitNC = [[UINavigationController alloc] initWithRootViewController:commitVC];
        [otherSelf presentViewController:commitNC animated:YES completion:nil];
        [commitVC release];
        [commitNC release];
        
    }];

}

#pragma mark - 创建随机穿越tableView
- (void)createArcrandomTableView{

    _arcrandomTableView = [[DNWFirstPagesTableView alloc] initWithFrame:CGRectMake(640, 0, ScreenWidth, ScreenHeight) style:UITableViewStylePlain urlString:ArcrandomPaperURL];
    _arcrandomTableView.frontString = FrontArcrandomPaperString;
    _arcrandomTableView.backString  = BackArcandomPaperString;
    [_rootScrollView addSubview:_arcrandomTableView];
    [_arcrandomTableView release];
    
    // 防止循环引用,预防内存泄露
    __block DNWFirstPaperViewController * otherSelf = self;
    [_arcrandomTableView setPushCommitView:^(NSString * url){
        
        DNWCommitViewController * commitVC = [[DNWCommitViewController alloc] init];
        commitVC.modalPresentationStyle = UIModalPresentationFullScreen;
        commitVC.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        commitVC.getCommitUrl = url;
        UINavigationController * commitNC = [[UINavigationController alloc] initWithRootViewController:commitVC];
        [otherSelf presentViewController:commitNC animated:YES completion:nil];
        [commitVC release];
        [commitNC release];
        
    }];


}

#pragma mark - 点击左边按钮
- (void)didClickLeftBarButtonAction:(UIBarButtonItem *) leftButton{
}


#pragma mark - 点击segmentIndex
- (void)didClickSegmentView:(UISegmentedControl *)seg{
    
    if (seg.selectedSegmentIndex == 1) {
        
        if (!_bestNewTableView) {
            [self createBestNewTableView];
        }
    }
    
    if (seg.selectedSegmentIndex == 2) {
        
        if (!_arcrandomTableView) {
            [self createArcrandomTableView];
        }
    }
    
    // 同步_rootScrollView显示内容
    NSInteger index = seg.selectedSegmentIndex;
    [_rootScrollView setContentOffset:CGPointMake(ScreenWidth*index, -64) animated:YES];
    
    
    
}

#pragma mark - 开始滑动
- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{

    #pragma mark 嵌套判断是因为只用了同一个TableView类,网络请求有延迟,可能第二个还没请求完就被第三个覆盖掉了
    if (!_bestNewTableView) {
        
        [self createBestNewTableView];
        
    }else{
        
        if (!_arcrandomTableView) {
            [self createArcrandomTableView];
        }else{
        }
        
    }

}

#pragma mark - 结束滑动,用来同步改变_segmentView对应的selectedSegmentIndex
-(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView{

    NSInteger nowIndex = scrollView.contentOffset.x / 320.0 ;
    _segmentView.selectedSegmentIndex = nowIndex;
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
