//
//  DNWThirdCustomCell.m
//  DouNiWan
//
//  Created by chenfengchang on 14-5-9.
//  Copyright (c) 2014年 胡明涛. All rights reserved.
//

#import "DNWThirdCustomCell.h"

#import "DNWThirdVideoSubclassViewController.h"
#import "DNWThirdVideoViewController.h"
#import "DNWAllDataHandle.h"
#import "DNWThirdData.h"
#import "UIImageView+WebCache.h"
#import <ShareSDK/ShareSDK.h>
#import <AVFoundation/AVFoundation.h>
#import "DNWCollectDataHandle.h"


#define backgroundImagesView_x  5
#define backgroundImagesView_Y  5
#define backgroundImagesView_Width 310
#define backgroundImagesView_Hight 400


//#define IntroduceLabel_MarginX 10
#define IntroduceLabel_MarginY 5
#define IntroduceLabel_Width   290
#define IntroduceLabel_Hight   50

#define PicImageView_MarginX   90
#define PicImageView_MarginY   60
#define PicImageView_Width     140
#define PicImageView_Hight     110

#define TimeLabel_MarginLeft   5
#define TimeLabel_MarginY      170
#define TimeLabel_Width        100
#define TimeLabel_Height       30

#define Button_Width           50
#define Button_Height          30


@implementation DNWThirdCustomCell

- (id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
{
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        // Initialization code
        [self createSubviews];
       
    }
    return self;
}
#pragma mark-------重写ThirdData的set方法--------
/**
 *  重写set方法实现自适应高度
 *  自适应高度的实现
 *
 *  @param thirdData setThirdData
 *  @param thirdData cellHight
 */
- (void)setThirdData:(DNWThirdData *)thirdData
{
    if (_thirdData!=thirdData) {
        
        [_thirdData release];
        _thirdData = [thirdData retain];
    }
    _shareLabel.text = @"分享";
    _introduceLable.text = thirdData.title;
    _timeLabel.text = thirdData.timeStr;
    _thirdData = thirdData;
    [_picImageView setImageWithURL:[NSURL URLWithString:thirdData.pic] placeholderImage:nil];
 
    CGSize size = CGSizeMake(_introduceLable.bounds.size.width, 2000);
    
    NSDictionary *attributedDic = [NSDictionary dictionaryWithObjectsAndKeys:[UIFont systemFontOfSize:15.0],NSFontAttributeName, nil] ;
    
    CGRect textRect = [thirdData.title boundingRectWithSize:size options: NSStringDrawingUsesLineFragmentOrigin attributes:attributedDic context:nil];
    
    CGRect introduceLabelRect = _introduceLable.frame;
    introduceLabelRect.size.height = textRect.size.height;
    
    
   //自定义后得到的frame值
    _introduceLable.frame = introduceLabelRect;
    _backgroundImagesView.frame = CGRectMake(5, 5, 310, _introduceLable.frame.size.height+PicImageView_Hight+TimeLabel_Height+10);
    _imageButton.frame = CGRectMake(PicImageView_MarginX, _introduceLable.frame.size.height+10, PicImageView_Width, PicImageView_Hight);
    
    _picImageView.frame = CGRectMake(0, 0,PicImageView_Width, PicImageView_Hight);
    
    _timeLabel.frame = CGRectMake(10, _introduceLable.frame.size.height+PicImageView_Hight+10, TimeLabel_Width, TimeLabel_Height);
    
    _collectButton.frame = CGRectMake(PicImageView_Hight+15, _introduceLable.frame.size.height+PicImageView_Hight+10+5, 20, 20);
    _collectLabel.frame = CGRectMake(PicImageView_Hight+Button_Width, _introduceLable.frame.size.height+PicImageView_Hight+10, 50, 30);
    
    _shareButton.frame = CGRectMake(PicImageView_Hight+Button_Width*2+15, _introduceLable.frame.size.height+PicImageView_Hight+10+5, 20, 20);
    _shareLabel.frame = CGRectMake(PicImageView_Hight+Button_Width*3, _introduceLable.frame.size.height+PicImageView_Hight+10, 50, 30);
    
   
}

#pragma mark-------自定义高度--------
+ (CGFloat)cellHight:(DNWThirdData *)data
{
    
    
    CGSize size = CGSizeMake(IntroduceLabel_Width, 20000);
    
    NSDictionary *attributedDic = [NSDictionary dictionaryWithObjectsAndKeys:[UIFont systemFontOfSize:15.0],NSFontAttributeName, nil];
    
    CGRect textRect = [data.title boundingRectWithSize:size options:NSStringDrawingUsesLineFragmentOrigin attributes:attributedDic context:nil];
    
    return textRect.size.height+PicImageView_Hight+Button_Height+20;
    
}


#pragma mark-------初始化在cell上显示视图--------
- (void)createSubviews
{
    CGFloat px = backgroundImagesView_x;
	CGFloat py = backgroundImagesView_Y;
	CGFloat pw = backgroundImagesView_Width;
    CGFloat ph = backgroundImagesView_Hight;
    
    
    _backgroundImagesView = [[UIImageView alloc]initWithFrame:CGRectMake(px,py, pw, ph)];
    //_backgroundImagesView.image = [UIImage imageNamed:@""];
    _backgroundImagesView.userInteractionEnabled = YES;
    _backgroundImagesView.layer.cornerRadius = 10;
    _backgroundImagesView.layer.masksToBounds = YES;
    _backgroundImagesView.backgroundColor = [UIColor whiteColor];
    [self.contentView addSubview:_backgroundImagesView];
    [_backgroundImagesView release];
    
     px = px+5;
	 py = IntroduceLabel_MarginY;
	 pw = IntroduceLabel_Width;
     ph = IntroduceLabel_Hight;
    _introduceLable = [[UILabel alloc] initWithFrame:CGRectMake(px, py, pw, ph)];
    _introduceLable.font = [UIFont systemFontOfSize:12];
    _introduceLable.textAlignment =   NSTextAlignmentLeft;
   // _introduceLable.backgroundColor = [UIColor orangeColor];
    _introduceLable.numberOfLines = 0;
    _introduceLable.lineBreakMode =  NSLineBreakByTruncatingMiddle;
	[_backgroundImagesView addSubview:_introduceLable];
	[_introduceLable release];

     px = PicImageView_MarginX;
	 py = ph;
	 pw = PicImageView_Width;
	 ph = PicImageView_Hight;
    
    _imageButton = [UIButton buttonWithType:UIButtonTypeCustom];
    _imageButton.frame = CGRectMake(px, py, pw, ph);
    [_imageButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [_backgroundImagesView addSubview:_imageButton];
    //_imageButton.backgroundColor = [UIColor purpleColor];
    [_imageButton addTarget:self action:@selector(didClickImageButtonAction) forControlEvents:UIControlEventTouchUpInside];
    
    _picImageView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, pw, ph)];
    [_imageButton addSubview:_picImageView];
    [_picImageView release];
    NSString *imageView= [NSString stringWithFormat:@"play_alt"];
    UIImage *collctImageView = [UIImage imageNamed:imageView];
    _imageButtonView = [[UIImageView alloc]initWithImage:collctImageView];
    _imageButtonView.frame =CGRectMake(_picImageView.bounds.size.width/2-20, _picImageView.bounds.size.height/2-20, 40, 40);
    [_picImageView addSubview:_imageButtonView];
    
    [_imageButtonView release];
    
    
    
    px = TimeLabel_MarginLeft;
    py = PicImageView_Hight+IntroduceLabel_Hight;
    pw = TimeLabel_Width;
    ph = TimeLabel_Height;
    _timeLabel = [[UILabel alloc] initWithFrame:CGRectMake(px, py, pw, ph)];
    //_timeLabel.text = @"时间显示";
    //_timeLabel.backgroundColor = [UIColor purpleColor];
    _timeLabel.textColor = [UIColor orangeColor];
    _timeLabel.font = [UIFont systemFontOfSize:15];
    [_backgroundImagesView addSubview:_timeLabel];
    [_timeLabel release];
    
    px = px+pw;
    py =py;
    pw = Button_Width;
    ph = Button_Height;
    
    _collectButton = [UIButton buttonWithType:UIButtonTypeSystem];
    _collectButton.frame = CGRectMake(px+5, py+5, 20, 20);
    NSString *image= [NSString stringWithFormat:@"star_full"];
    UIImage *collctImage = [UIImage imageNamed:image];
    [_collectButton setBackgroundImage:collctImage forState:UIControlStateNormal];
    [_backgroundImagesView addSubview:_collectButton];
    //_collectButton.backgroundColor = [UIColor purpleColor];
    [_collectButton addTarget:self action:@selector(didClickCollectButtonAction) forControlEvents:UIControlEventTouchUpInside];
    
    px = px+Button_Width;
    py = py;
    pw = Button_Width;
    ph = Button_Height;
    _collectLabel = [[UILabel alloc] initWithFrame:CGRectMake(px, py, pw, ph)];
    _collectLabel.textColor =[UIColor orangeColor];
    //_collectLabel.backgroundColor = [UIColor purpleColor];
    _collectLabel.font = [UIFont systemFontOfSize:12];
    [_backgroundImagesView addSubview:_collectLabel];
    [_collectLabel release];
    
    px = px+Button_Width;
    py = py;
    pw = Button_Width;
    ph = Button_Height;
    
    _shareButton = [UIButton buttonWithType:UIButtonTypeSystem];
    _shareButton.frame = CGRectMake(px+5, py+5, 20, 20);
    NSString *imageName = [NSString stringWithFormat:@"f045"];
    UIImage *showImage = [UIImage imageNamed:imageName];
    //_shareButton.backgroundColor = [UIColor purpleColor];
    [_shareButton setBackgroundImage:showImage forState:UIControlStateNormal];
    [_backgroundImagesView addSubview:_shareButton];
    [_shareButton addTarget:self action:@selector(didClickShareButtonAction) forControlEvents:UIControlEventTouchUpInside];

    
    px = px+Button_Width;
    py = py;
    pw = Button_Width;
    ph = Button_Height;
    _shareLabel = [[UILabel alloc] initWithFrame:CGRectMake(px, py, pw, ph)];
    //_shareLabel.backgroundColor = [UIColor purpleColor];
    _shareLabel.textColor =[UIColor orangeColor];
    _shareLabel.font = [UIFont systemFontOfSize:12];
    [_backgroundImagesView addSubview:_shareLabel];
    [_shareLabel release];
    
    
}

#pragma mark-------点击图片实现Block--------
- (void)didClickImageButtonAction
{
    if (_block) {
        _block();
    }
}
#pragma mark-------Block的实现方法--------
- (void)changBackGround:(myBlock)block
{
    self.block = block;
}
/**
 * collectButton 实现方法(收藏)
 */
#pragma mark-------实现收藏的方法--------
- (void)didClickCollectButtonAction
{
    if ([[DNWCollectDataHandle shareInstance] electThirdDataWithId:_thirdData.Id]== NO) {
        _collectLabel.text = @"取消收藏";
        [[DNWCollectDataHandle  shareInstance] insertNewDNWThirdData:_thirdData];
    } else {
        [[DNWCollectDataHandle shareInstance] deleteDNWThirdData:_thirdData];
       
        [[DNWCollectDataHandle shareInstance]removeDNWThirdData:_thirdData];        
        _collectLabel.text = @"收藏";
    }

   
}

- (void)shouCangzitigaibian:(DNWThirdCustomCell *)cell
{
    if ([[DNWCollectDataHandle shareInstance] electThirdDataWithId:_thirdData.Id]== YES) {
        cell.collectLabel.text = @"取消收藏";
    } else {
        
        cell.collectLabel.text = @"收藏";
        
    }
}


/**
 *  shareButton 实现方法(分享)
 */
#pragma mark-------实现分享的方法--------
- (void)didClickShareButtonAction
{
    //self.backgroundColor = [UIColor blueColor];
    /**
     *	@brief	创建分享内容对象，根据以下每个字段适用平台说明来填充参数值
     *
     *	@param 	content 	分享内容（新浪、腾讯、网易、搜狐、豆瓣、人人、开心、有道云笔记、facebook、twitter、邮件、打印、短信、微信、QQ、拷贝）
     *	@param 	defaultContent 	默认分享内容（新浪、腾讯、网易、搜狐、豆瓣、人人、开心、有道云笔记、facebook、twitter、邮件、打印、短信、微信、QQ、拷贝）
     *	@param 	image 	分享图片（新浪、腾讯、网易、搜狐、豆瓣、人人、开心、facebook、twitter、邮件、打印、微信、QQ、拷贝）
     *	@param 	title 	标题（QQ空间、人人、微信、QQ）
     *	@param 	url 	链接（QQ空间、人人、instapaper、微信、QQ）
     *	@param 	description 	主体内容（人人）
     *	@param 	mediaType 	分享类型（QQ、微信）
     *
     *	@return	分享内容对象
     */
    
    //构造分享内容
    NSString * content = [[_thirdData.web_url stringByAppendingString:_thirdData.mp4_url] stringByAppendingString:@"欢迎关注我的空间http://user.qzone.qq.com/910617055?ptlang=2052"];

    id<ISSContent> publishContent = [ShareSDK content:content
                                       defaultContent:_thirdData.title
                                                image:[ShareSDK imageWithPath:_thirdData.pic]
                                                title:_thirdData.title
                                                  url:@"http://user.qzone.qq.com/910617055?ptlang=2052"
                                          description:@"http://user.qzone.qq.com/910617055?ptlang=2052"
                                            mediaType:SSPublishContentMediaTypeImage];
                                                    //SSPublishContentMediaTypeNews SSPublishContentMediaTypeVideo
    
    /**
     *	@brief	显示分享菜单
     *
     *	@param 	container 	用于显示分享界面的容器，如果只显示在iPhone客户端可以传入nil。如果需要在iPad上显示需要指定容器。
     *	@param 	shareList 	平台类型列表
     *	@param 	content 	分享内容
     *  @param  statusBarTips   状态栏提示标识：YES：显示； NO：隐藏
     *  @param  authOptions 授权选项，用于指定接口在需要授权时的一些属性（如：是否自动授权，授权视图样式等），默认可传入nil
     *  @param  shareOptions    分享选项，用于定义分享视图部分属性（如：标题、一键分享列表、功能按钮等）,默认可传入nil
     *  @param  result  分享返回事件处理
     */
    [ShareSDK showShareActionSheet:nil
                         shareList:nil
                           content:publishContent
                     statusBarTips:YES
                       authOptions:nil
                      shareOptions: nil
                            result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
                                if (state == SSResponseStateSuccess)
                                {
                                    NSLog(@"分享成功");
                                }
                                else if (state == SSResponseStateFail)
                                {
                                    NSLog(@"失败");
                                }
                            }];
        
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated
{
    [super setSelected:selected animated:animated];

}

//释放 
- (void)dealloc
{
    Block_release(self.block);
    RELEASE_SAFELY(_thirdData);
    [super dealloc];
}


@end
